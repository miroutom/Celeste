name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request: 
    branches:
        - main
        - dev
env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy: 
      fail-fast: false
      matrix:
        projectPath:
          -  ${{ github.workspace }}
        testMode:
          - playmode
          - editmode
          - standalone

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
    
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: Library
          key: ${{ runner.os }}-unity-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          
      - name: Test runner
        uses: game-ci/unity-test-runner@v4
        with:
          path: ${{ github.workspace }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          packageMode: false
          unityVersion: 2022.3.17f1

      - uses: game-ci/unity-test-runner@v4
        id: gameTestStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.102'

      - name: Install dotnet-format tool
        run: dotnet tool install -g dotnet-format

      - name: Verify code style
        run: |
          dotnet format --check

      - name: Build project
        run: |
          ./Unity/Editor/Unity -quit -batchmode -projectPath . -buildTarget StandaloneWindows64 -buildPath build
          mkdir -p artifacts
          mv build/*.exe artifacts/
        
      - name: Build repository
        uses: game-ci/unity-builder@v4

      
        with:
          targetPlatform: WebGL
