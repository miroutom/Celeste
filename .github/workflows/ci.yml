name: CI

on:
  push:
    branches:
      - dev
  pull_request: 
    branches:
      - dev

env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy: 
      fail-fast: false
      matrix:
        projectPath:
          -  ${{ github.workspace }}
        testMode:
          - playmode
          - editmode
          - standalone

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Check disk space
        run: df -h

      - name: Check memory usage
        run: free -m
        
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: Library
          key: ${{ runner.os }}-unity-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          
      - name: Test runner
        uses: game-ci/unity-test-runner@v4
        with:
          path: ${{ github.workspace }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          packageMode: false
          unityVersion: 2022.3.17f1

      - uses: game-ci/unity-test-runner@v4
        id: gameTestStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.102'

      - name: Install dotnet-format tool
        run: dotnet tool install -g dotnet-format

      - name: Check code
        run: dotnet format ./Celeste.sln --verbosity diagnostic

      - name: Build project
        uses: game-ci/unity-builder@v4
        with:
          path: ${{ matrix.projectPath }}
          targetPlatform: WebGL
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
